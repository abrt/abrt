# Configuration file for the ABRT C/C++ hook
# ------------------------------------------

# CCpp hook writes its template to the "/proc/sys/kernel/core_pattern" file
# and stores the original template in the "/var/run/abrt/saved_core_pattern"
# file. If you want the CCpp hook to create a core dump file named
# according to the original template as well, set 'MakeCompatCore' to
# 'yes'. If the original template string starts with "|", the string "core"
# is used instead of the template.
#
# For more information about naming core dump files see 'man 5 core'.
#
# Default: no because of RLIMIT_CORE='unlimited' since systemd-229:
#   https://github.com/systemd/systemd/issues/2643
#
# MakeCompatCore = no

# Maximum size of the coredump file in MiB.
#
# This value is compared to value of the MaxCrashReportSize configuration option
# (set in /etc/abrt/abrt.conf) and the lower of the values is used as the
# limit. The value 0 indicates unlimited size.
#
# If MaxCoreFileSize is 0, the value of MaxCrashReportSize is the limit.
# If MaxCrashReportSize is 0, the value of MaxCoreFileSize is the limit.
# If both values are 0, the core file size is unlimited.
#
# Default: 0
#
# MaxCoreFileSize = 0

# Enable to save a copy of the crashed binary to the problem directory.
# This might be useful to trace the crash of a binary that might be deleted.
#
# Default: no
#
# SaveBinaryImage = no

# When enabled, stack traces are generated by abrt-hook-ccpp as the kernel
# creates core dumps. Only the crash thread is stored. This feature requires
# kernel version 3.18.
#
# Default: yes
#
# JITCoreDumpTracing = yes

# Specify if the full coredump should be saved.
#
# If disabled, the coredump won't be saved and you won't be able to report
# the crash to Bugzilla. At least one of SaveFullCore and
# JITCoreDumpTracing must be enabled in order to produce useful report.
#
# Please note that if this option is disabled with MakeCompatCore being
# enabled, the coredump is still written to the current directory.
#
# Default: yes
#
# SaveFullCore = yes

# Specify directories where ABRT should look for non-system debuginfos.
# This is a colon-separated list of file system paths.
#
# Beware the first path in the list is used by ABRT to save downloaded
# debuginfos, therefore the first path in the list must be _writable_, the
# rest of the list can be read-only.
#
# Default: /var/cache/abrt-di
#
# DebuginfoLocation = /var/cache/abrt-di

# Specify the package manager used for downloading debuginfo packages.
# Allowed values are: yum, dnf.
#
# Default: @DEFAULT_PACKAGE_MANAGER@
#
# PackageManager = @DEFAULT_PACKAGE_MANAGER@

# ABRT will ignore crashes in executables whose absolute path matches any
# of the glob patterns listed in the comma separated list.
#
# Default: Empty.
# Example: /usr/bin/firefox, /usr/bin/ps2*, */.cache/*
#
# IgnoredPaths =

# Instruct ABRT to only process crashes of users who are either on the
# whitelist or are members of a whitelisted group. If no users or groups
# are whitelisted, ABRT will process crashes of all users.
#
# Both AllowedUsers and AllowedGroups are comma-separated lists.
#
# Default: Both empty.
# Example: alice, root, wheel
#
# AllowedUsers =
# AllowedGroups =

# Allow the hook to run 'rpm -qf' for crashes in containers.
#
# Default: no
#
# SaveContainerizedPackageData = no

# Instruct abrt-hook-ccpp to create a dump directory even if abrtd is not
# running.
#
# Default: no
#
# StandaloneHook = no

# Verbosity level. Used for debugging.
#
# Default: 0
#
# VerboseLog = 0
