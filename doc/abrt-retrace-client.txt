abrt-retrace-client(1)
======================

NAME
----
abrt-retrace-client - Handles the communication with Retrace server.

SYNOPSIS
--------
'abrt-retrace-client' <operation> [options]

DESCRIPTION
-----------
This tool is able to communicate with Retrace server: create a new task,
ask about task's status, download log or backtrace of a finished task.

Integration with libreport events
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'abrt-retrace-client' can be used as an analyzer for
application crashes which dump core.

Example usage in report_event.conf:

------------
EVENT=analyze analyzer=CCpp
        abrt-retrace-client
------------

OPERATIONS
----------
create::
   Creates a new task. Prints task ID and password to stdout.
   Either -d or -c is required.

status::
   Prints task\'s status to stdout. Both -t and -p are required.

log::
   Prints finished task\'s log to stdout. Both -t and -p are required.

backtrace::
   Print finished task\'s backtrace to stdout. Both -t and -p are required.

batch::
   Runs all operations in one step: creates a new task, periodically
   asks for status (the period is specified by --status-delay option)
   and downloads the result when finished. If the task was successful
   backtrace file is saved, otherwise log is printed to stdout.
   Either -c or -d is required.

OPTIONS
-------
-v, --verbose::
   be verbose

-s, --syslog::
   log to syslog

-k, --insecure::
   allow insecure connection to retrace server (with self-signed or expired certificate)

--url URL::
   retrace server URL

--headers::
   (debug) show received HTTP headers

-d, --dir DIR::
   read data from ABRT problem directory

-c, --core COREDUMP::
   read data from coredump

-l, --status-delay::
   delay for polling operations (seconds)

--no-unlink::
   (debug) do not delete temporary archive created in /tmp

-t, --task ID::
   ID of the task on server

-p, --password PWD::
   password of the task on server

AUTHORS
-------
* ABRT team
