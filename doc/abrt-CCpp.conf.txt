abrt-CCpp.conf(5)
=================

NAME
----
abrt-CCpp.conf - Configuration file for ABRT's core dump crash hook

SYNOPSIS
--------
/etc/abrt/plugins/CCpp.conf

DESCRIPTION
-----------
The configuration file consists of items in the format "Option = Value".
Ithe following items are recognized:

*MakeCompatCore = 'yes/no'*::
   CCpp hook writes its template to the "/proc/sys/kernel/core_pattern" file
   and stores the original template in the "/var/run/abrt/saved_core_pattern"
   file. If you want the CCpp hook to create a core dump file named
   according to the original template as well, set 'MakeCompatCore' to
   'yes'. If the original template string starts with "|", the string "core"
   is used instead of the template.
   +
   For more information about naming core dump files see 'man 5 core'.
   +
   Default is 'no'.

*MaxCoreFileSize = 'size'*::
   Maximum size of the coredump file in MiB.
   This value is compared to value of the 'MaxCrashReportSize' configuration
   option (set in 'abrt.conf') and the lower of the values is used as the
   limit. The value 0 indicates unlimited size.
   +
   Default is 0, i.e. equal to 'MaxCrashReportSize'.

*SaveBinaryImage = 'yes/no'*::
   Enable to save a copy of the crashed binary to the problem directory.
   This might be useful to trace the crash of a binary that might be deleted.
   +
   Default is 'no'.

*JITCoreDumpTracing = 'yes/no'*::
   When enabled, stack traces are generated by abrt-hook-ccpp as the kernel
   creates core dumps. Only the crash thread is stored. This feature requires
   kernel version 3.18.
   +
   Default is 'yes'.

*SaveFullCore = 'yes/no'*::
   Specify if the full coredump should be saved.
   +
   If disabled, the coredump won't be saved and you won't be able to report
   the crash to Bugzilla. At least one of SaveFullCore and
   JITCoreDumpTracing must be enabled in order to produce useful report.
   +
   Please note that if this option is disabled with MakeCompatCore being
   enabled, the coredump is still written to the current directory.
   +
   Default is 'yes'.

*DebuginfoLocation = 'directory'*::
   Specify directories where ABRT should look for non-system debuginfos.
   This is a colon-separated list of file system paths.
   +
   Beware the first path in the list is used by ABRT to save downloaded
   debuginfos, therefore the first path in the list must be _writable_, the
   rest of the list can be read-only.
   +
   Default is `/var/cache/abrt-di`.

*PackageManager = 'yum/dnf'*::
   Specify the package manager used for downloading debuginfo packages.
   +
   Default is dnf.

*IgnoredPaths = 'list'*::
   ABRT will ignore crashes in executables whose absolute path matches any
   of the glob patterns listed in the comma separated list.
   +
   Example: /usr/bin/firefox, /usr/bin/ps2*, \*/.cache/*
   +
   Default is empty.

*AllowedUsers = 'list'*::
   Instruct ABRT to only process crashes of users who are either on the
   whitelist or are members of a whitelisted group. If no users or groups
   are whitelisted, ABRT will process crashes of all users. AllowedUsers is
   a comma-separated list.
   +
   Example: alice, bob
   +
   Default is empty (disabled).

*AllowedGroups = 'list'*::
   Instruct ABRT to only process crashes of users who are either on the
   whitelist or are members of a whitelisted group. If no users or groups
   are whitelisted, ABRT will process crashes of all users. AllowedGroups is
   a comma-separated list.
   +
   Example: root, wheel
   +
   Default is empty (disabled).

*SaveContainerizedPackageData = 'yes/no'*::
   Allow the hook to run 'rpm -qf' for crashes in containers.
   +
   Default is 'no'.

*StandaloneHook = 'yes/no'*::
   Instruct abrt-hook-ccpp to create a dump directory even if abrtd is not running.
   +
   Default is 'no'.

*VerboseLog = 'integer'*::
   Verbosity level for the hook. Used for debugging.
   +
   Default is 0.

FILES
-----
/etc/abrt/plugins/CCpp.conf

SEE ALSO
--------
abrt.conf(5)
abrt-action-generate-core-backtrace(1)

AUTHORS
-------
* ABRT team
